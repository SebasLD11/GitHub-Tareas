{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./services.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./services.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { ServiceService } from './service.service';\nlet ServicesComponent = class ServicesComponent {\n  constructor(serviceService) {\n    this.serviceService = serviceService;\n    this.services = [];\n  }\n  ngOnInit() {\n    this.getServices();\n  }\n  getServices() {\n    this.serviceService.getServices().subscribe(data => {\n      this.services = data;\n    }, error => {\n      console.error('Error fetching services', error);\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: ServiceService\n  }];\n};\nServicesComponent = __decorate([Component({\n  selector: 'app-service',\n  standalone: true,\n  imports: [],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ServicesComponent);\nexport { ServicesComponent };","map":{"version":3,"names":["Component","ServiceService","ServicesComponent","constructor","serviceService","services","ngOnInit","getServices","subscribe","data","error","console","_","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Sebas\\Desktop\\GitHub-Tareas\\TFT-Services\\FRONTEND\\src\\app\\services\\services.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ServiceService } from './service.service';\r\n\r\n@Component({\r\n  selector: 'app-service',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.css']\r\n})\r\nexport class ServicesComponent implements OnInit {\r\n  services: any[] = [];\r\n\r\n  constructor(private serviceService: ServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getServices();\r\n  }\r\n\r\n  getServices(): void {\r\n    this.serviceService.getServices().subscribe(\r\n      (data: any[]) => {\r\n        this.services = data;\r\n      },\r\n      (error: any) => {\r\n        console.error('Error fetching services', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,cAAc,QAAQ,mBAAmB;AAS3C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAFlC,KAAAC,QAAQ,GAAU,EAAE;EAEkC;EAEtDC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT,IAAI,CAACH,cAAc,CAACG,WAAW,EAAE,CAACC,SAAS,CACxCC,IAAW,IAAI;MACd,IAAI,CAACJ,QAAQ,GAAGI,IAAI;IACtB,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;;;;AAlBUV,iBAAiB,GAAAW,UAAA,EAP7Bb,SAAS,CAAC;EACTc,QAAQ,EAAE,aAAa;EACvBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,EAAE;EACXC,QAAA,EAAAC,oBAAwC;;CAEzC,CAAC,C,EACWhB,iBAAiB,CAmB7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}