{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nfunction AuthComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 10);\n    i0.ɵɵtext(2, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 11);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_div_5_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.username, $event) || (ctx_r1.username = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.username);\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.isLoginMode = true;\n      this.username = '';\n      this.email = '';\n      this.password = '';\n    }\n    onSwitchMode() {\n      this.isLoginMode = !this.isLoginMode;\n    }\n    onSubmit() {\n      if (this.isLoginMode) {\n        this.authService.login({\n          email: this.email,\n          password: this.password\n        }).subscribe(response => {\n          localStorage.setItem('token', response.token);\n          this.router.navigate(['/']);\n        });\n      } else {\n        this.authService.register({\n          username: this.username,\n          email: this.email,\n          password: this.password\n        }).subscribe(response => {\n          localStorage.setItem('token', response.token);\n          this.router.navigate(['/']);\n        });\n      }\n    }\n    static #_ = this.ɵfac = function AuthComponent_Factory(t) {\n      return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      decls: 16,\n      vars: 6,\n      consts: [[1, \"auth-container\"], [1, \"auth-form\"], [3, \"ngSubmit\"], [4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [3, \"click\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(5, AuthComponent_div_5_Template, 4, 1, \"div\", 3);\n          i0.ɵɵelementStart(6, \"label\", 4);\n          i0.ɵɵtext(7, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_8_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"label\", 6);\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 8);\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_14_listener() {\n            return ctx.onSwitchMode();\n          });\n          i0.ɵɵtext(15);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login\" : \"Register\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoginMode);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login\" : \"Register\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Switch to Register\" : \"Switch to Login\");\n        }\n      },\n      styles: [\".auth-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100vh}.auth-form[_ngcontent-%COMP%]{background:#fff;padding:20px;border-radius:10px;box-shadow:0 4px 8px #0003;width:300px;text-align:center}.auth-form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:20px}.auth-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;margin-bottom:5px}.auth-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;padding:10px;margin-bottom:10px;border:1px solid #ccc;border-radius:5px}.auth-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:10px 20px;border:none;border-radius:5px;background-color:#ddb81a;color:#000;cursor:pointer;transition:background-color .3s}.auth-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#b59517}\"]\n    });\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}