{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./home.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./home.component.css?ngResource\";\nimport { Component, HostListener } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor() {\n    this.currentSlide = 0;\n    this.slides = document.querySelectorAll('.slide');\n    this.totalSlides = this.slides.length;\n  }\n  ngAfterViewInit() {\n    this.showSlide(this.currentSlide);\n    setInterval(() => this.nextSlide(), 3000); // Moves to the next slide every 3 seconds\n  }\n  showSlide(index) {\n    const slider = document.querySelector('.slider');\n    if (slider) {\n      slider.style.transform = `translateX(-${index * 100}%)`;\n    }\n  }\n  nextSlide() {\n    this.currentSlide = (this.currentSlide + 1) % this.totalSlides;\n    this.showSlide(this.currentSlide);\n  }\n  onWindowScroll() {\n    const navbar = document.querySelector('.navbar');\n    const navLinks = document.querySelector('.nav-links');\n    const authButtons = document.querySelector('.auth-buttons');\n    if (navbar && navLinks && authButtons) {\n      if (window.scrollY > 50) {\n        navLinks.classList.add('hidden');\n        authButtons.classList.add('hidden');\n        navbar.classList.add('shrink');\n      } else {\n        navLinks.classList.remove('hidden');\n        authButtons.classList.remove('hidden');\n        navbar.classList.remove('shrink');\n      }\n    }\n  }\n  static #_ = this.propDecorators = {\n    onWindowScroll: [{\n      type: HostListener,\n      args: ['window:scroll', []]\n    }]\n  };\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  standalone: true,\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","HostListener","HomeComponent","constructor","currentSlide","slides","document","querySelectorAll","totalSlides","length","ngAfterViewInit","showSlide","setInterval","nextSlide","index","slider","querySelector","style","transform","onWindowScroll","navbar","navLinks","authButtons","window","scrollY","classList","add","remove","_","args","__decorate","selector","standalone","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Sebas\\Desktop\\GitHub-Tareas\\TFT-Services\\FRONTEND\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component, AfterViewInit, HostListener } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  standalone: true,\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements AfterViewInit {\r\n  currentSlide: number = 0;\r\n  slides: NodeListOf<HTMLElement> = document.querySelectorAll('.slide');\r\n  totalSlides: number = this.slides.length;\r\n\r\n  ngAfterViewInit() {\r\n    this.showSlide(this.currentSlide);\r\n    setInterval(() => this.nextSlide(), 3000); // Moves to the next slide every 3 seconds\r\n  }\r\n\r\n  showSlide(index: number) {\r\n    const slider: HTMLElement | null = document.querySelector('.slider');\r\n    if (slider) {\r\n      slider.style.transform = `translateX(-${index * 100}%)`;\r\n    }\r\n  }\r\n\r\n  nextSlide() {\r\n    this.currentSlide = (this.currentSlide + 1) % this.totalSlides;\r\n    this.showSlide(this.currentSlide);\r\n  }\r\n\r\n  @HostListener('window:scroll', [])\r\n  onWindowScroll() {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navLinks = document.querySelector('.nav-links');\r\n    const authButtons = document.querySelector('.auth-buttons');\r\n    \r\n    if (navbar && navLinks && authButtons) {\r\n      if (window.scrollY > 50) {\r\n        navLinks.classList.add('hidden');\r\n        authButtons.classList.add('hidden');\r\n        navbar.classList.add('shrink');\r\n      } else {\r\n        navLinks.classList.remove('hidden');\r\n        authButtons.classList.remove('hidden');\r\n        navbar.classList.remove('shrink');\r\n      }\r\n    }\r\n  }\r\n}"],"mappings":";;;AAAA,SAASA,SAAS,EAAiBC,YAAY,QAAQ,eAAe;AAQ/D,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAAnBC,YAAA;IACL,KAAAC,YAAY,GAAW,CAAC;IACxB,KAAAC,MAAM,GAA4BC,QAAQ,CAACC,gBAAgB,CAAC,QAAQ,CAAC;IACrE,KAAAC,WAAW,GAAW,IAAI,CAACH,MAAM,CAACI,MAAM;EAqC1C;EAnCEC,eAAeA,CAAA;IACb,IAAI,CAACC,SAAS,CAAC,IAAI,CAACP,YAAY,CAAC;IACjCQ,WAAW,CAAC,MAAM,IAAI,CAACC,SAAS,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;EAC7C;EAEAF,SAASA,CAACG,KAAa;IACrB,MAAMC,MAAM,GAAuBT,QAAQ,CAACU,aAAa,CAAC,SAAS,CAAC;IACpE,IAAID,MAAM,EAAE;MACVA,MAAM,CAACE,KAAK,CAACC,SAAS,GAAG,eAAeJ,KAAK,GAAG,GAAG,IAAI;IACzD;EACF;EAEAD,SAASA,CAAA;IACP,IAAI,CAACT,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY,GAAG,CAAC,IAAI,IAAI,CAACI,WAAW;IAC9D,IAAI,CAACG,SAAS,CAAC,IAAI,CAACP,YAAY,CAAC;EACnC;EAGAe,cAAcA,CAAA;IACZ,MAAMC,MAAM,GAAGd,QAAQ,CAACU,aAAa,CAAC,SAAS,CAAC;IAChD,MAAMK,QAAQ,GAAGf,QAAQ,CAACU,aAAa,CAAC,YAAY,CAAC;IACrD,MAAMM,WAAW,GAAGhB,QAAQ,CAACU,aAAa,CAAC,eAAe,CAAC;IAE3D,IAAII,MAAM,IAAIC,QAAQ,IAAIC,WAAW,EAAE;MACrC,IAAIC,MAAM,CAACC,OAAO,GAAG,EAAE,EAAE;QACvBH,QAAQ,CAACI,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;QAChCJ,WAAW,CAACG,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;QACnCN,MAAM,CAACK,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;MAChC,CAAC,MAAM;QACLL,QAAQ,CAACI,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;QACnCL,WAAW,CAACG,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;QACtCP,MAAM,CAACK,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;MACnC;IACF;EACF;EAAC,QAAAC,CAAA,G;;YAjBA3B,YAAY;MAAA4B,IAAA,GAAC,eAAe,EAAE,EAAE;IAAA;;;AAtBtB3B,aAAa,GAAA4B,UAAA,EANzB9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,IAAI;EAChBC,QAAA,EAAAC,oBAAoC;;CAErC,CAAC,C,EACWhC,aAAa,CAwCzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}