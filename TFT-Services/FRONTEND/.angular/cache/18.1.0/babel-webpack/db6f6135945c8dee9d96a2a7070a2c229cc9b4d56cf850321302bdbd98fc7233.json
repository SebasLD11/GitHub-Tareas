{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./auth.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./auth.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nlet AuthComponent = class AuthComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.username = '';\n    this.email = '';\n    this.password = '';\n  }\n  register() {\n    this.authService.register({\n      username: this.username,\n      email: this.email,\n      password: this.password\n    }).subscribe(response => {\n      console.log('User registered successfully', response);\n    });\n  }\n  login() {\n    this.authService.login({\n      email: this.email,\n      password: this.password\n    }).subscribe(response => {\n      localStorage.setItem('token', response.token);\n      console.log('User logged in successfully');\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: AuthService\n  }];\n};\nAuthComponent = __decorate([Component({\n  selector: 'app-auth',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AuthComponent);\nexport { AuthComponent };","map":{"version":3,"names":["Component","AuthService","AuthComponent","constructor","authService","username","email","password","register","subscribe","response","console","log","login","localStorage","setItem","token","_","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Sebas\\Desktop\\GitHub-Tareas\\TFT-Services\\FRONTEND\\src\\app\\auth\\auth.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent {\r\n  username: string = '';\r\n  email: string = '';\r\n  password: string = '';\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  register(): void {\r\n    this.authService.register({ username: this.username, email: this.email, password: this.password }).subscribe(response => {\r\n      console.log('User registered successfully', response);\r\n    });\r\n  }\r\n\r\n  login(): void {\r\n    this.authService.login({ email: this.email, password: this.password }).subscribe(response => {\r\n      localStorage.setItem('token', response.token);\r\n      console.log('User logged in successfully');\r\n    });\r\n  }\r\n}"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,QAAQ,0BAA0B;AAO/C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAJ/B,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;EAE2B;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACJ,WAAW,CAACI,QAAQ,CAAC;MAAEH,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEC,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE,CAAC,CAACE,SAAS,CAACC,QAAQ,IAAG;MACtHC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC;IACvD,CAAC,CAAC;EACJ;EAEAG,KAAKA,CAAA;IACH,IAAI,CAACT,WAAW,CAACS,KAAK,CAAC;MAAEP,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE,CAAC,CAACE,SAAS,CAACC,QAAQ,IAAG;MAC1FI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACM,KAAK,CAAC;MAC7CL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC,CAAC;EACJ;EAAC,QAAAK,CAAA,G;;;;AAlBUf,aAAa,GAAAgB,UAAA,EALzBlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,UAAU;EACpBC,QAAA,EAAAC,oBAAoC;;CAErC,CAAC,C,EACWnB,aAAa,CAmBzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}