{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/services/booking.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nlet BookingService = class BookingService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/bookings'; // Ajusta la URL según sea necesario\n  }\n  createBooking(bookingData) {\n    return this.http.post(`${this.apiUrl}`, bookingData);\n  }\n  getUserBookings(userId) {\n    return this.http.get(`${this.apiUrl}/user/${userId}`);\n  }\n  updateBooking(bookingId, bookingData) {\n    return this.http.put(`${this.apiUrl}/${bookingId}`, bookingData);\n  }\n  deleteBooking(bookingId) {\n    return this.http.delete(`${this.apiUrl}/${bookingId}`);\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nBookingService = __decorate([Injectable({\n  providedIn: 'root'\n})], BookingService);\nexport { BookingService };","map":{"version":3,"names":["Injectable","HttpClient","BookingService","constructor","http","apiUrl","createBooking","bookingData","post","getUserBookings","userId","get","updateBooking","bookingId","put","deleteBooking","delete","_","__decorate","providedIn"],"sources":["C:\\Users\\Sebas\\Desktop\\GitHub-Tareas\\TFT-Services\\FRONTEND\\src\\app\\services\\booking.service.ts"],"sourcesContent":["// src/app/services/booking.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingService {\r\n  private apiUrl = 'http://localhost:5000/api/bookings'; // Ajusta la URL según sea necesario\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createBooking(bookingData: any): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}`, bookingData);\r\n  }\r\n  \r\n  getUserBookings(userId: string): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}/user/${userId}`);\r\n  }\r\n\r\n  updateBooking(bookingId: string, bookingData: any): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/${bookingId}`, bookingData);\r\n  }\r\n\r\n  deleteBooking(bookingId: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${bookingId}`);\r\n  }\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAM1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC,CAAC,CAAC;EAEf;EAExCC,aAAaA,CAACC,WAAgB;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,EAAE,EAAEE,WAAW,CAAC;EACtD;EAEAE,eAAeA,CAACC,MAAc;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAQ,GAAG,IAAI,CAACN,MAAM,SAASK,MAAM,EAAE,CAAC;EAC9D;EAEAE,aAAaA,CAACC,SAAiB,EAAEN,WAAgB;IAC/C,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,MAAM,IAAIQ,SAAS,EAAE,EAAEN,WAAW,CAAC;EAClE;EAEAQ,aAAaA,CAACF,SAAiB;IAC7B,OAAO,IAAI,CAACT,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAIQ,SAAS,EAAE,CAAC;EACxD;EAAC,QAAAI,CAAA,G;;;;AAnBUf,cAAc,GAAAgB,UAAA,EAH1BlB,UAAU,CAAC;EACVmB,UAAU,EAAE;CACb,CAAC,C,EACWjB,cAAc,CAoB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}