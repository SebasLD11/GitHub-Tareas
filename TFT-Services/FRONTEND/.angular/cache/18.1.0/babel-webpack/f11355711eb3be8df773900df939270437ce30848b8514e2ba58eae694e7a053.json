{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nlet ServiceService = class ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/services';\n  }\n  getServices() {\n    return this.http.get(this.apiUrl);\n  }\n  getServiceById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createService(service) {\n    return this.http.post(this.apiUrl, service);\n  }\n  updateService(id, service) {\n    return this.http.put(`${this.apiUrl}/${id}`, service);\n  }\n  deleteService(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nServiceService = __decorate([Injectable({\n  providedIn: 'root'\n})], ServiceService);\nexport { ServiceService };","map":{"version":3,"names":["Injectable","HttpClient","ServiceService","constructor","http","apiUrl","getServices","get","getServiceById","id","createService","service","post","updateService","put","deleteService","delete","_","__decorate","providedIn"],"sources":["C:\\Users\\Sebas\\Desktop\\GitHub-Tareas\\TFT-Services\\FRONTEND\\src\\app\\services\\service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceService {\r\n  private apiUrl = 'http://localhost:5000/api/services';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getServices(): Observable<any[]> {\r\n    return this.http.get<[]>(this.apiUrl);\r\n  }\r\n\r\n  getServiceById(id: string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createService(service: any): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl, service);\r\n  }\r\n\r\n  updateService(id: string, service: any): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/${id}`, service);\r\n  }\r\n\r\n  deleteService(id: string): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAM1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAK,IAAI,CAACF,MAAM,CAAC;EACvC;EAEAG,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACnD;EAEAC,aAAaA,CAACC,OAAY;IACxB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;EAClD;EAEAE,aAAaA,CAACJ,EAAU,EAAEE,OAAY;IACpC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAM,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EAC5D;EAEAI,aAAaA,CAACN,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAM,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACtD;EAAC,QAAAQ,CAAA,G;;;;AAvBUf,cAAc,GAAAgB,UAAA,EAH1BlB,UAAU,CAAC;EACVmB,UAAU,EAAE;CACb,CAAC,C,EACWjB,cAAc,CAwB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}