{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nlet AdminService = class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/admin'; // Asegúrate de que esta URL apunte a tu backend\n  }\n  // Métodos de usuario\n  registerAdmin(user) {\n    return this.http.post(`${this.apiUrl}/register-admin`, user);\n  }\n  getUsers() {\n    return this.http.get(`${this.apiUrl}/users`);\n  }\n  updateUser(id, user) {\n    return this.http.put(`${this.apiUrl}/users/${id}`, user);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/users/${id}`);\n  }\n  // Métodos de servicio\n  createService(service) {\n    return this.http.post(`${this.apiUrl}/services`, service);\n  }\n  getServices() {\n    return this.http.get(`${this.apiUrl}/services`);\n  }\n  updateService(id, service) {\n    return this.http.put(`${this.apiUrl}/services/${id}`, service);\n  }\n  deleteService(id) {\n    return this.http.delete(`${this.apiUrl}/services/${id}`);\n  }\n  // Métodos de reserva\n  getBookings() {\n    return this.http.get(`${this.apiUrl}/bookings`);\n  }\n  getBookingDetails(bookingId) {\n    return this.http.get(`${this.apiUrl}/${bookingId}`);\n  }\n  createBooking(booking) {\n    return this.http.post(`${this.apiUrl}/bookings`, booking);\n  }\n  updateBooking(id, booking) {\n    return this.http.put(`${this.apiUrl}/bookings/${id}`, booking);\n  }\n  deleteBooking(id) {\n    return this.http.delete(`${this.apiUrl}/bookings/${id}`);\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nAdminService = __decorate([Injectable({\n  providedIn: 'root'\n})], AdminService);\nexport { AdminService };","map":{"version":3,"names":["Injectable","HttpClient","AdminService","constructor","http","apiUrl","registerAdmin","user","post","getUsers","get","updateUser","id","put","deleteUser","delete","createService","service","getServices","updateService","deleteService","getBookings","getBookingDetails","bookingId","createBooking","booking","updateBooking","deleteBooking","_","__decorate","providedIn"],"sources":["C:\\Users\\Sebas\\Desktop\\GitHub-Tareas\\TFT-Services\\FRONTEND\\src\\app\\services\\admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  private apiUrl = 'http://localhost:5000/api/admin'; // Asegúrate de que esta URL apunte a tu backend\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Métodos de usuario\r\n  registerAdmin(user: any): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/register-admin`, user);\r\n  }\r\n\r\n  getUsers(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/users`);\r\n  }\r\n\r\n  updateUser(id: string, user: any): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/users/${id}`, user);\r\n  }\r\n\r\n  deleteUser(id: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/users/${id}`);\r\n  }\r\n\r\n  // Métodos de servicio\r\n  createService(service: any): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/services`, service);\r\n  }\r\n\r\n  getServices(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/services`);\r\n  }\r\n\r\n  updateService(id: string, service: any): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/services/${id}`, service);\r\n  }\r\n\r\n  deleteService(id: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/services/${id}`);\r\n  }\r\n\r\n  // Métodos de reserva\r\n  getBookings(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/bookings`);\r\n  }\r\n  \r\n  getBookingDetails(bookingId: string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${bookingId}`);\r\n  }\r\n\r\n\r\n  createBooking(booking: any): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/bookings`, booking);\r\n  }\r\n\r\n  updateBooking(id: string, booking: any): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/bookings/${id}`, booking);\r\n  }\r\n\r\n  deleteBooking(id: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/bookings/${id}`);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAM1C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC,CAAC,CAAC;EAEZ;EAExC;EACAC,aAAaA,CAACC,IAAS;IACrB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,iBAAiB,EAAEE,IAAI,CAAC;EAC9D;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,MAAM,QAAQ,CAAC;EAC9C;EAEAM,UAAUA,CAACC,EAAU,EAAEL,IAAS;IAC9B,OAAO,IAAI,CAACH,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACR,MAAM,UAAUO,EAAE,EAAE,EAAEL,IAAI,CAAC;EAC1D;EAEAO,UAAUA,CAACF,EAAU;IACnB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,MAAM,UAAUO,EAAE,EAAE,CAAC;EACvD;EAEA;EACAI,aAAaA,CAACC,OAAY;IACxB,OAAO,IAAI,CAACb,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,WAAW,EAAEY,OAAO,CAAC;EAC3D;EAEAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACd,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,MAAM,WAAW,CAAC;EACjD;EAEAc,aAAaA,CAACP,EAAU,EAAEK,OAAY;IACpC,OAAO,IAAI,CAACb,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACR,MAAM,aAAaO,EAAE,EAAE,EAAEK,OAAO,CAAC;EAChE;EAEAG,aAAaA,CAACR,EAAU;IACtB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,MAAM,aAAaO,EAAE,EAAE,CAAC;EAC1D;EAEA;EACAS,WAAWA,CAAA;IACT,OAAO,IAAI,CAACjB,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,MAAM,WAAW,CAAC;EACjD;EAEAiB,iBAAiBA,CAACC,SAAiB;IACjC,OAAO,IAAI,CAACnB,IAAI,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,MAAM,IAAIkB,SAAS,EAAE,CAAC;EAC1D;EAGAC,aAAaA,CAACC,OAAY;IACxB,OAAO,IAAI,CAACrB,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,WAAW,EAAEoB,OAAO,CAAC;EAC3D;EAEAC,aAAaA,CAACd,EAAU,EAAEa,OAAY;IACpC,OAAO,IAAI,CAACrB,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACR,MAAM,aAAaO,EAAE,EAAE,EAAEa,OAAO,CAAC;EAChE;EAEAE,aAAaA,CAACf,EAAU;IACtB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,MAAM,aAAaO,EAAE,EAAE,CAAC;EAC1D;EAAC,QAAAgB,CAAA,G;;;;AA3DU1B,YAAY,GAAA2B,UAAA,EAHxB7B,UAAU,CAAC;EACV8B,UAAU,EAAE;CACb,CAAC,C,EACW5B,YAAY,CA4DxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}