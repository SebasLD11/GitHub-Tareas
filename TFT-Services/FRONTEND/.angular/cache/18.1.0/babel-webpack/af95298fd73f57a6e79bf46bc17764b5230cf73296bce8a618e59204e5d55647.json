{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./register.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./register.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nlet RegisterComponent = class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.username = '';\n    this.email = '';\n    this.password = '';\n  }\n  register() {\n    this.authService.register({\n      username: this.username,\n      email: this.email,\n      password: this.password\n    }).subscribe(response => {\n      localStorage.setItem('token', response.token);\n      this.router.navigate(['/']);\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: AuthService\n  }, {\n    type: Router\n  }];\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["Component","AuthService","Router","RegisterComponent","constructor","authService","router","username","email","password","register","subscribe","response","localStorage","setItem","token","navigate","_","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Sebas\\Desktop\\GitHub-Tareas\\TFT-Services\\FRONTEND\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n  username: string = '';\r\n  email: string = '';\r\n  password: string = '';\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  register(): void {\r\n    this.authService.register({ username: this.username, email: this.email, password: this.password }).subscribe(response => {\r\n      localStorage.setItem('token', response.token);\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,MAAM,QAAQ,iBAAiB;AAOjC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAJ5D,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;EAEmD;EAExEC,QAAQA,CAAA;IACN,IAAI,CAACL,WAAW,CAACK,QAAQ,CAAC;MAAEH,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEC,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE,CAAC,CAACE,SAAS,CAACC,QAAQ,IAAG;MACtHC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACG,KAAK,CAAC;MAC7C,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;;;;;;AAZUd,iBAAiB,GAAAe,UAAA,EAL7BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,cAAc;EACxBC,QAAA,EAAAC,oBAAwC;;CAEzC,CAAC,C,EACWlB,iBAAiB,CAa7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}